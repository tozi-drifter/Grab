import random
from html import escape 

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext, CallbackQueryHandler, CommandHandler

from shivu import application, PHOTO_URL, SUPPORT_CHAT, UPDATE_CHAT, BOT_USERNAME, db, GROUP_ID
from shivu import pm_users as collection 


async def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id
    first_name = update.effective_user.first_name
    username = update.effective_user.username

    user_data = await collection.find_one({"_id": user_id})

    if user_data is None:
        
        await collection.insert_one({"_id": user_id, "first_name": first_name, "username": username})
        
        await context.bot.send_message(chat_id=GROUP_ID, 
                                       text=f"New user Started The Bot..\n User: <a href='tg://user?id={user_id}'>{escape(first_name)})</a>", 
                                       parse_mode='HTML')
    else:
        
        if user_data['first_name'] != first_name or user_data['username'] != username:
            
            await collection.update_one({"_id": user_id}, {"$set": {"first_name": first_name, "username": username}})

    

    if update.effective_chat.type== "private":
        
        
        caption = f"""
        üåô …¢ Ä·¥á·¥á·¥õ…™…¥…¢s  è·¥è·¥ú ,
…™'·¥ç Àπ·¥°·¥Ä…™“ì·¥ú ·¥Ä·¥õ·¥õ·¥Ä…™…¥·¥á Ä  ô·¥è·¥õÀºüîÆ ,
 …¥…™·¥Ñ·¥á ·¥õ·¥è ·¥ç·¥á·¥á·¥õ  è·¥è·¥ú!
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚å• ·¥° ú·¥Ä·¥õ ·¥Ñ·¥Ä…¥ …™ ·¥Ö·¥è ?
‚ñ∏ …™ ·¥Ñ·¥Ä…¥ s·¥ò·¥Ä·¥°…¥ ·¥°·¥Ä…™“ì·¥ús …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs “ì·¥è Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õ ·¥ús·¥á Äs ·¥õ·¥è ·¥Ä·¥õ·¥õ·¥Ä…™…¥ ·¥õ ú·¥á·¥ç.

‚å•  ú·¥è·¥°  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥ç·¥á ?
‚ñ∏ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs ·¥Ä…¥·¥Ö ·¥Ñ ü…™·¥Ñ·¥ã ·¥õ ú·¥á “ì·¥è ü ü·¥è·¥°…™…¥…¢  ú·¥á ü·¥ò  ô·¥ú·¥õ·¥õ·¥è…¥ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs.üíç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞  """
        
        keyboard = [
            [InlineKeyboardButton("…™…¥·¥†…™·¥õ·¥á ·¥ç·¥á", url=f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f'https://t.me/{SUPPORT_CHAT}'),
            InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f'https://t.me/{UPDATE_CHAT}')],
            [InlineKeyboardButton(" ú·¥á ü·¥ò ·¥Ä…¥·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data='help')],
            [InlineKeyboardButton("…¢ ú·¥ès·¥õ", url=f'https://t.me/Bang_Brave_Bang_Bravern')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        photo_url = random.choice(PHOTO_URL)

        await context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_url, caption=caption, reply_markup=reply_markup, parse_mode='markdown')

    else:
        photo_url = random.choice(PHOTO_URL)
        keyboard = [
            [InlineKeyboardButton("…™…¥·¥†…™·¥õ·¥á ·¥ç·¥á", url=f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f'https://t.me/{SUPPORT_CHAT}'),
            InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f'https://t.me/{UPDATE_CHAT}')],
            [InlineKeyboardButton(" ú·¥á ü·¥ò ·¥Ä…¥·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data='help')],
            [InlineKeyboardButton("SOURCE", url=f'https://t.me/Bang_Brave_Bang_Bravern')]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_url, caption="·¥Ä ü…™·¥†·¥á?üîÆ \n ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ ·¥õ·¥è ·¥ç è ·¥ò·¥ç “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ",reply_markup=reply_markup )

async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'help':
        help_text = """
    ***Help Section:***
    
***/attain: ·¥õ·¥è ·¥è ô·¥õ·¥Ä…™…¥ ·¥°·¥Ä…™“ì·¥ú*
***/fav: ·¥Ä·¥Ös  è·¥è·¥ú Ä “ì·¥Ä·¥† ·¥°·¥Ä…™“ì·¥ú*
***/trade : ·¥õ·¥è ·¥õ Ä·¥Ä·¥Ö·¥á  è·¥è·¥ú Ä ·¥°·¥Ä…™“ì·¥ú*
***/gift: ·¥õ·¥è …¢…™“ì·¥õ ·¥Ä…¥ è ·¥°·¥Ä…™“ì·¥ú ·¥õ·¥è ·¥Ä…¥ è ô·¥è·¥Ö è*
***/harem: ·¥õ·¥è s·¥á·¥á  è·¥è·¥ú Ä  ú·¥Ä Ä·¥á·¥çs*
***/topgroups : s·¥á ·¥õ·¥è·¥ò …¢ Ä·¥è·¥ú·¥òs.. ·¥ò·¥ò ü ·¥è ô·¥õ·¥Ä…™…¥s ·¥ç·¥ès·¥õ …™…¥ ·¥õ ú·¥Ä·¥õ …¢ Ä·¥è·¥ú·¥ò*
***/top: ·¥õ·¥è·¥è s·¥á·¥á ·¥õ·¥è·¥ò ·¥ús·¥á Äs*
***/ctop :  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ·¥õ·¥è·¥ò*
***/changetime: ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á ·¥õ…™·¥ç·¥á ·¥° ú·¥á·¥ç ·¥°·¥Ä…™“ì·¥ú ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä*
   """
        help_keyboard = [[InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data='back')]]
        reply_markup = InlineKeyboardMarkup(help_keyboard)
        
        await context.bot.edit_message_caption(chat_id=update.effective_chat.id, message_id=query.message.message_id, caption=help_text, reply_markup=reply_markup, parse_mode='markdown')

    elif query.data == 'back':

        caption = f"""
        üåô …¢ Ä·¥á·¥á·¥õ…™…¥…¢s  è·¥è·¥ú ,
…™'·¥ç Àπ·¥°·¥Ä…™“ì·¥ú ·¥Ä·¥õ·¥õ·¥Ä…™…¥·¥á Ä  ô·¥è·¥õÀºüîÆ ,
 …¥…™·¥Ñ·¥á ·¥õ·¥è ·¥ç·¥á·¥á·¥õ  è·¥è·¥ú!
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚å• ·¥° ú·¥Ä·¥õ ·¥Ñ·¥Ä…¥ …™ ·¥Ö·¥è ?
‚ñ∏ …™ ·¥Ñ·¥Ä…¥ s·¥ò·¥Ä·¥°…¥ ·¥°·¥Ä…™“ì·¥ús …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs “ì·¥è Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õ ·¥ús·¥á Äs ·¥õ·¥è ·¥Ä·¥õ·¥õ·¥Ä…™…¥ ·¥õ ú·¥á·¥ç.

‚å•  ú·¥è·¥°  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥ç·¥á ?
‚ñ∏ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs ·¥Ä…¥·¥Ö ·¥Ñ ü…™·¥Ñ·¥ã ·¥õ ú·¥á “ì·¥è ü ü·¥è·¥°…™…¥…¢  ú·¥á ü·¥ò  ô·¥ú·¥õ·¥õ·¥è…¥ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs.üíç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ """

        
        keyboard = [
            [InlineKeyboardButton("…™…¥·¥†…™·¥õ·¥á ·¥ç·¥á", url=f'http://t.me/{BOT_USERNAME}?startgroup=new')],
            [InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f'https://t.me/{SUPPORT_CHAT}'),
            InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f'https://t.me/{UPDATE_CHAT}')],
            [InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data='help')],
            [InlineKeyboardButton("…¢ ú·¥ès·¥õ", url=f'https://t.me/Bang_Brave_Bang_Bravern')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.edit_message_caption(chat_id=update.effective_chat.id, message_id=query.message.message_id, caption=caption, reply_markup=reply_markup, parse_mode='markdown')


application.add_handler(CallbackQueryHandler(button, pattern='^help$|^back$', block=False))
start_handler = CommandHandler('start', start, block=False)
application.add_handler(start_handler)
